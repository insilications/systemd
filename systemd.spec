#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
%define keepstatic 1
Name     : systemd
Version  : 248
Release  : 401
URL      : https://github.com/systemd/systemd/archive/refs/tags/v248.tar.gz
Source0  : https://github.com/systemd/systemd/archive/refs/tags/v248.tar.gz
Source1  : systemd-timesyncd-fix-localstatedir.service
Source2  : no-hibernate.conf
Summary  : systemd Library
Group    : Development/Tools
License  : GPL-2.0 LGPL-2.1
Requires: libcap
BuildRequires : Linux-PAM-dev
BuildRequires : Linux-PAM-dev32
BuildRequires : acl-dev
BuildRequires : acl-dev32
BuildRequires : bash-completion-dev
BuildRequires : buildreq-meson
BuildRequires : cmake
BuildRequires : cryptsetup-dev
BuildRequires : curl-dev
BuildRequires : dbus-dev
BuildRequires : dbus-dev32
BuildRequires : docbook-xml
BuildRequires : elfutils-dev
BuildRequires : gcc
BuildRequires : gcc-abi
BuildRequires : gcc-dev
BuildRequires : gcc-dev32
BuildRequires : gcc-doc
BuildRequires : gcc-libgcc32
BuildRequires : gcc-libs-math
BuildRequires : gcc-libstdc++32
BuildRequires : gcc-libubsan
BuildRequires : gcc-locale
BuildRequires : gettext-bin
BuildRequires : gettext-dev
BuildRequires : glib-bin
BuildRequires : glib-dev
BuildRequires : glib-dev32
BuildRequires : glibc-dev32
BuildRequires : glibc-libc32
BuildRequires : gnu-efi
BuildRequires : gnu-efi-dev
BuildRequires : gnu-efi-staticdev
BuildRequires : gperf
BuildRequires : intltool
BuildRequires : intltool-dev
BuildRequires : iptables-dev
BuildRequires : iptables-dev32
BuildRequires : kmod-dev
BuildRequires : kmod-dev32
BuildRequires : libcap
BuildRequires : libcap-dev
BuildRequires : libcap-dev32
BuildRequires : libcgroup-dev
BuildRequires : libffi-dev
BuildRequires : libgcc1
BuildRequires : libgcrypt-dev
BuildRequires : libgcrypt-dev32
BuildRequires : libgpg-error-dev
BuildRequires : libmicrohttpd-dev
BuildRequires : libpwquality-dev
BuildRequires : libseccomp-dev
BuildRequires : libseccomp-dev32
BuildRequires : libstdc++
BuildRequires : libxkbcommon-dev
BuildRequires : libxslt-bin
BuildRequires : lxml
BuildRequires : ninja
BuildRequires : openssl-dev
BuildRequires : pkg-config-dev
BuildRequires : pkgconfig(32liblz4)
BuildRequires : pkgconfig(32libzstd)
BuildRequires : pkgconfig(32p11-kit-1)
BuildRequires : pkgconfig(32xkbcommon)
BuildRequires : pkgconfig(audit)
BuildRequires : pkgconfig(bash-completion)
BuildRequires : pkgconfig(liblz4)
BuildRequires : pkgconfig(libzstd)
BuildRequires : pkgconfig(polkit-gobject-1)
BuildRequires : pkgconfig(pwquality)
BuildRequires : pkgconfig(xkbcommon)
BuildRequires : pkgconfig(zlib)
BuildRequires : polkit-dev
BuildRequires : python3
BuildRequires : readline-dev
BuildRequires : shadow
BuildRequires : tpm2-tss
BuildRequires : tpm2-tss-dev
BuildRequires : util-linux-dev
BuildRequires : util-linux-dev32
BuildRequires : util-linux-extras
BuildRequires : xz-dev
BuildRequires : zlib-dev32
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}
Patch1: 0001-journal-raise-compression-threshold.patch
Patch2: 0002-journal-Add-option-to-skip-boot-kmsg-events.patch
Patch3: 0003-core-use-mmap-to-load-files.patch
Patch4: 0004-Build-drop-pam-nsswitch-ship-legacy-tmpfiles-disable.patch
Patch5: 0005-journal-flush-var-kmsg-after-starting-disable-kmsg-f.patch
Patch6: 0006-logind-pam-fix-systemd-user-to-include-common-sessio.patch
Patch7: 0007-sd-event-return-malloc-memory-reserves-when-main-loo.patch
Patch8: 0008-efi-boot-generator-Do-not-automount-boot-partition.patch
Patch9: 0009-core-do-not-apply-presets.patch
Patch10: 0010-locale-setup-set-default-locale-to-a-unicode-one.patch
Patch11: 0011-mount-setup-mount-kernel-fs-by-default.patch
Patch12: 0012-Ship-default-services-in-system-unit-dir.patch
Patch13: 0013-bootctl-Add-force-option-to-enable-chroot-install-re.patch
Patch14: 0014-kernel-install-Support-alternate-root-usage-via-SUBD.patch
Patch15: 0015-bootctl-Handle-gummiboot-systemd-migration.patch
Patch16: 0016-tmpfiles-Make-var-cache-ldconfig-world-readable.patch
Patch17: 0017-Set-a-default-unique-hostname-when-it-is-either-clr-.patch
Patch18: 0018-more-udev-children-workers.patch
Patch19: 0019-not-load-iptables.patch
Patch20: 0020-Add-journal-flush-service-for-Microsoft-Azure-VMs.patch
Patch21: 0021-Enable-BBR-Bottleneck-Bandwidth-and-RTT.patch
Patch22: 0022-network-online-complete-once-one-link-is-online-not-.patch
Patch23: 0023-Remove-libm-memory-overhead.patch
Patch24: 0024-udev-log-also-device-path.patch
Patch25: 0025-skip-not-present-ACPI-devices.patch
Patch26: 0026-Ensure-var-run-is-never-a-directory.patch
Patch27: 0027-Make-timesyncd-a-simple-service.patch
Patch28: 0028-Compile-udev-with-O3.patch
Patch29: 0029-Don-t-wait-for-utmp-at-shutdown.patch
Patch30: 0030-Don-t-do-transient-hostnames-we-set-ours-already.patch
Patch31: 0031-don-t-use-libm-just-for-integer-exp10.patch
Patch32: 0032-Notify-systemd-earlier-that-resolved-is-ready.patch
Patch33: 0033-Hand-off-coredumps-to-a-wrapper-that-will-optionally.patch
Patch34: 0034-add-stateless-for-locale-files-locale.conf-00-keyboa.patch
Patch35: 0035-Do-not-enable-audit-by-default-in-the-journal.patch
Patch36: 0036-Disable-XZ-support-in-the-journal.patch
Patch37: 0037-Localize-1-symbol.patch
Patch38: 0038-mount-setup-Harden-a-bit-the-options-for-certan-moun.patch
Patch39: 0039-Add-dependency-on-NetworkManager.patch
Patch40: 0040-boot-efi-comment-out-success-validation-message.patch
Patch41: 0041-Exempt-gdm-and-a-few-others-from-default-to-locked-a.patch
Patch42: 0042-Disable-LLDP-listening-by-default.patch
Patch43: 0043-units-use-var-swapfile-if-found.patch
Patch44: 0044-meson-do-not-fail-if-rsync-is-not-installed-with-mes.patch
Patch45: 0045-Fix-hostname-setup.c.patch
Patch46: 0046-Fix-mount_setup.patch

%description
systemd System and Service Manager
DETAILS:
http://0pointer.de/blog/projects/systemd.html

%prep
%setup -q -n systemd-248
cd %{_builddir}/systemd-248
%patch1 -p1
%patch2 -p1
%patch3 -p1
%patch4 -p1
%patch5 -p1
%patch6 -p1
%patch7 -p1
%patch8 -p1
%patch9 -p1
%patch10 -p1
%patch11 -p1
%patch12 -p1
%patch13 -p1
%patch14 -p1
%patch15 -p1
%patch16 -p1
%patch17 -p1
%patch18 -p1
%patch19 -p1
%patch20 -p1
%patch21 -p1
%patch22 -p1
%patch23 -p1
%patch24 -p1
%patch25 -p1
%patch26 -p1
%patch27 -p1
%patch28 -p1
%patch29 -p1
%patch30 -p1
%patch31 -p1
%patch32 -p1
%patch33 -p1
%patch34 -p1
%patch35 -p1
%patch36 -p1
%patch37 -p1
%patch38 -p1
%patch39 -p1
%patch40 -p1
%patch41 -p1
%patch42 -p1
%patch43 -p1
%patch44 -p1
%patch45 -p1
%patch46 -p1
pushd ..
cp -a systemd-248 build32
popd

%build
unset http_proxy
unset https_proxy
unset no_proxy
export SSL_CERT_FILE=/var/cache/ca-certs/anchors/ca-certificates.crt
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1623248368
export GCC_IGNORE_WERROR=1
## altflags1 content
export CFLAGS="-Wno-error -Wno-format -g -O3 --param=lto-max-streaming-parallelism=16 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -floop-block -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -Wl,-sort-common -Wno-error -Wno-format -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC -Wl,-z,max-page-size=0x1000 -fomit-frame-pointer -pthread -static-libstdc++ -static-libgcc -Wl,--build-id=sha1"
# -ffat-lto-objects -fno-PIE -fno-PIE -m64 -no-pie -fPIC -Wl,-z,max-page-size=0x1000 -fvisibility=hidden -flto-partition=none
# gcc: -feliminate-unused-debug-types -fipa-pta -flto=16 -Wno-error -Wno-format -Wp,-D_REENTRANT -fno-common -funroll-loops
export CXXFLAGS="-Wno-error -Wno-format -g -O3 --param=lto-max-streaming-parallelism=16 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -floop-block -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -Wl,-sort-common -Wno-error -Wno-format -Wp,-D_REENTRANT -fvisibility-inlines-hidden -pipe -ffat-lto-objects -fPIC -Wl,-z,max-page-size=0x1000 -fomit-frame-pointer -pthread -static-libstdc++ -static-libgcc -Wl,--build-id=sha1"
#
export FCFLAGS="-Wno-error -Wno-format -g -O3 --param=lto-max-streaming-parallelism=16 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -floop-block -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -Wl,-sort-common -Wno-error -Wno-format -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC -Wl,-z,max-page-size=0x1000 -fomit-frame-pointer -pthread -static-libstdc++ -static-libgcc -Wl,--build-id=sha1"
export FFLAGS="-Wno-error -Wno-format -g -O3 --param=lto-max-streaming-parallelism=16 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -floop-block -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -Wl,-sort-common -Wno-error -Wno-format -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC -Wl,-z,max-page-size=0x1000 -fomit-frame-pointer -Wl,--build-id=sha1"
export CFFLAGS="-Wno-error -Wno-format -g -O3 --param=lto-max-streaming-parallelism=16 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -floop-block -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -Wl,-sort-common -Wno-error -Wno-format -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC -Wl,-z,max-page-size=0x1000 -fomit-frame-pointer -pthread -static-libstdc++ -static-libgcc -Wl,--build-id=sha1"
#
export LDFLAGS="-Wno-error -Wno-format -g -O3 --param=lto-max-streaming-parallelism=16 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -floop-block -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -fno-plt -Wl,-sort-common -Wno-error -Wno-format -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC -Wl,-z,max-page-size=0x1000 -fomit-frame-pointer -pthread -static-libstdc++ -static-libgcc -lpthread -Wl,--build-id=sha1"
#
export AR=/usr/bin/gcc-ar
export RANLIB=/usr/bin/gcc-ranlib
export NM=/usr/bin/gcc-nm
#
export MAKEFLAGS=%{?_smp_mflags}
#
%global _lto_cflags 1
#global _lto_cflags %{nil}
%global _disable_maintainer_mode 1
#%global _disable_maintainer_mode %{nil}
#
export CCACHE_DISABLE=true
export CCACHE_NOHASHDIR=true
export CCACHE_CPP2=true
export CCACHE_SLOPPINESS=pch_defines,time_macros,locale,file_stat_matches,file_stat_matches_ctime,include_file_ctime,include_file_mtime,modules,system_headers,clang_index_store,file_macro
#export CCACHE_SLOPPINESS=modules,include_file_mtime,include_file_ctime,time_macros,pch_defines,file_stat_matches,clang_index_store,system_headers,locale
#export CCACHE_SLOPPINESS=pch_defines,time_macros,locale,clang_index_store,file_macro
export CCACHE_DIR=/var/tmp/ccache
export CCACHE_BASEDIR=/builddir/build/BUILD
#export CCACHE_LOGFILE=/var/tmp/ccache/cache.debug
#export CCACHE_DEBUG=true
#export CCACHE_NODIRECT=true
#
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/nvidia/lib64:/usr/nvidia/lib64/vdpau:/usr/nvidia/lib64/xorg/modules/drivers:/usr/nvidia/lib64/xorg/modules/extensions:/usr/local/cuda/lib64:/usr/lib64/dri:/usr/lib64/haswell:/usr/lib64:/usr/lib:/usr/share"
#
export LIBRARY_PATH="$LIBRARY_PATH:/usr/nvidia/lib64:/usr/nvidia/lib64/vdpau:/usr/nvidia/lib64/xorg/modules/drivers:/usr/nvidia/lib64/xorg/modules/extensions:/usr/local/cuda/lib64:/usr/lib64/dri:/usr/lib64/haswell:/usr/lib64:/usr/lib:/usr/share"
#
export PATH="$PATH:/usr/local/cuda/bin:/usr/nvidia/bin:/usr/bin/haswell:/usr/bin:/usr/sbin"
#
export CPATH="$CPATH:/usr/local/cuda/include"
#
export DISPLAY=:0
export __GL_ALLOW_UNOFFICIAL_PROTOCOL=1
export __GL_SYNC_TO_VBLANK=0
export __GL_SYNC_DISPLAY_DEVICE=DFP-1
export VDPAU_NVIDIA_SYNC_DISPLAY_DEVICE=DFP-1
export LANG=en_US.UTF-8
export XDG_CONFIG_DIRS=/usr/share/xdg:/etc/xdg
export XDG_SEAT=seat0
export XDG_SESSION_TYPE=tty
export XDG_CURRENT_DESKTOP=KDE
export XDG_SESSION_CLASS=user
export XDG_VTNR=1
export XDG_SESSION_ID=1
export XDG_RUNTIME_DIR=/run/user/1000
export XDG_DATA_DIRS=/usr/local/share:/usr/share
export KDE_SESSION_VERSION=5
export KDE_SESSION_UID=1000
export KDE_FULL_SESSION=true
export KDE_APPLICATIONS_AS_SCOPE=1
export VDPAU_DRIVER=nvidia
export LIBVA_DRIVER_NAME=vdpau
export LIBVA_DRIVERS_PATH=/usr/lib64/dri
export GTK_RC_FILES=/etc/gtk/gtkrc
export FONTCONFIG_PATH=/usr/share/defaults/fonts
## altflags1 end
CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS" meson --libdir=lib64 --prefix=/usr --buildtype=release -Ddefault_library=both -Ddefault-hierarchy=hybrid \
-Dsmack=false \
-Dsysvinit-path= \
-Dsysvrcnd_path= \
-Dxz=true \
-Dgcrypt=true \
-Dlz4=true \
-Dqrencode=false \
-Dpcre2=false \
-Dlibidn=false \
-Dlibidn2=false \
-Dman=true \
-Ddefault-kill-user-processes=false \
-Dntp-servers="_gateway gateway 0.clearlinux.pool.ntp.org 1.clearlinux.pool.ntp.org 2.clearlinux.pool.ntp.org 3.clearlinux.pool.ntp.org time.intel.com" \
-Ddefault-dnssec=no  builddir
ninja --verbose %{?_smp_mflags} -v -C builddir

pushd ../build32/
export CFLAGS="-O2 -ffat-lto-objects -fuse-linker-plugin -pipe -fPIC -m32 -mstackrealign -march=native -mtune=native"
export CXXFLAGS="-O2 -ffat-lto-objects -fuse-linker-plugin -fvisibility-inlines-hidden -pipe -fPIC -m32 -mstackrealign -march=native -mtune=native"
export LDFLAGS="-O2 -ffat-lto-objects -fuse-linker-plugin -pipe -fPIC -m32 -mstackrealign -march=native -mtune=native"
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
unset LD_LIBRARY_PATH
export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
export ASFLAGS="${ASFLAGS}${ASFLAGS:+ }--32"
export CFLAGS="${CFLAGS}${CFLAGS:+ }-m32 -mstackrealign"
export CXXFLAGS="${CXXFLAGS}${CXXFLAGS:+ }-m32 -mstackrealign"
export LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-m32 -mstackrealign"
meson --libdir=lib32 --prefix=/usr --buildtype=release -Ddefault_library=both -Ddefault-hierarchy=hybrid \
-Dsmack=false \
-Dsysvinit-path= \
-Dsysvrcnd_path= \
-Dxz=true \
-Dgcrypt=true \
-Dlz4=true \
-Dqrencode=false \
-Dpcre2=false \
-Dlibidn=false \
-Dlibidn2=false \
-Dman=true \
-Ddefault-kill-user-processes=false \
-Dntp-servers="_gateway gateway 0.clearlinux.pool.ntp.org 1.clearlinux.pool.ntp.org 2.clearlinux.pool.ntp.org 3.clearlinux.pool.ntp.org time.intel.com" \
-Ddefault-dnssec=no -Dlibcryptsetup=false \
-Dgnutls=false \
-Dlibcurl=false \
-Delfutils=false \
-Dmicrohttpd=false \
-Dremote=false \
-Dxz=false \
-Dgcrypt=false \
-Dopenssl=false \
-Daudit=false \
-Dpolkit=false builddir
ninja --verbose %{?_smp_mflags} -v -C builddir
popd

%check
export LANG=C.UTF-8
unset http_proxy
unset https_proxy
unset no_proxy
export SSL_CERT_FILE=/var/cache/ca-certs/anchors/ca-certificates.crt
ninja -C builddir test ||:

%install
pushd ../build32/
DESTDIR=%{buildroot} ninja -C builddir install
if [ -d  %{buildroot}/usr/lib32/pkgconfig ]
then
pushd %{buildroot}/usr/lib32/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
popd
DESTDIR=%{buildroot} ninja -C builddir install
mkdir -p %{buildroot}/usr/lib/systemd/system
install -m 0644 %{SOURCE1} %{buildroot}/usr/lib/systemd/system/systemd-timesyncd-fix-localstatedir.service
mkdir -p %{buildroot}/usr/lib/systemd/sleep.conf.d
install -m644 %{_sourcedir}/no-hibernate.conf %{buildroot}/usr/lib/systemd/sleep.conf.d/
## Remove excluded files
rm -f %{buildroot}/usr/bin/kernel-install
rm -f %{buildroot}/usr/bin/systemd-firstboot
rm -f %{buildroot}/usr/lib/rpm/macros.d/macros.systemd
rm -f %{buildroot}/usr/lib/systemd/import-pubring.gpg
rm -f %{buildroot}/usr/lib/systemd/system-generators/systemd-hibernate-resume-generator
rm -f %{buildroot}/usr/lib/systemd/system-generators/systemd-system-update-generator
rm -f %{buildroot}/usr/lib/systemd/system-generators/systemd-veritysetup-generator
rm -f %{buildroot}/usr/lib/systemd/system/ldconfig.service
rm -f %{buildroot}/usr/lib/systemd/system/systemd-firstboot.service
rm -f %{buildroot}/usr/lib/systemd/system/systemd-hwdb-update.service
rm -f %{buildroot}/usr/lib/systemd/system/systemd-journal-catalog-update.service
rm -f %{buildroot}/usr/lib/systemd/system/systemd-sysusers.service
rm -f %{buildroot}/usr/lib/systemd/system/systemd-tmpfiles-setup-dev.service
rm -f %{buildroot}/usr/lib/systemd/system/systemd-update-done.service
rm -f %{buildroot}/usr/lib/systemd/system/system-update-cleanup.service
rm -f %{buildroot}/usr/lib/systemd/system/system-update.target
rm -f %{buildroot}/usr/lib/systemd/systemd-update-done
rm -f %{buildroot}/usr/lib/udev/hwdb.d/20-pci-vendor-model.hwdb
rm -f %{buildroot}/usr/share/bash-completion/completions/kernel-install
rm -f %{buildroot}/usr/share/zsh/site-functions/_kernel-install
rm -f %{buildroot}/var/lib/systemd/catalog/database
rm -f %{buildroot}/var/log/README
## install_append content

# All users should be defined in the systemd-config package
rm -f %{buildroot}/usr/lib/sysusers.d/basic.conf
rm -f %{buildroot}/usr/lib/sysusers.d/systemd.conf
rm -f %{buildroot}/usr/lib/sysusers.d/systemd-remote.conf
rmdir %{buildroot}/usr/lib/sysusers.d

# No external linking of this shared object should happen
rm -f %{buildroot}/usr/lib/systemd/libsystemd-shared.so

# These configuration files, are actually documentation only
# We have manpages for that
rm -f %{buildroot}/etc/systemd/journald.conf
rm -f %{buildroot}/etc/systemd/logind.conf
rm -f %{buildroot}/etc/systemd/resolved.conf
rm -f %{buildroot}/etc/systemd/system.conf
rm -f %{buildroot}/etc/systemd/timesyncd.conf
rm -f %{buildroot}/etc/systemd/user.conf
rm -f %{buildroot}/etc/udev/udev.conf
rmdir %{buildroot}/etc/udev/hwdb.d
rmdir %{buildroot}/etc/udev/rules.d
rmdir %{buildroot}/etc/udev

# These are unwanted and would end up in -autostart, because %exclude isn't
# honored by -autostart auto subrpm
rm -f %{buildroot}/usr/lib/systemd/system/sysinit.target.wants/ldconfig.service
rm -f %{buildroot}/usr/lib/systemd/system/sysinit.target.wants/systemd-firstboot.service
rm -f %{buildroot}/usr/lib/systemd/system/sysinit.target.wants/systemd-hwdb-update.service
rm -f %{buildroot}/usr/lib/systemd/system/sysinit.target.wants/systemd-journal-catalog-update.service
rm -f %{buildroot}/usr/lib/systemd/system/sysinit.target.wants/systemd-sysusers.service
rm -f %{buildroot}/usr/lib/systemd/system/sysinit.target.wants/systemd-update-done.service
rm -f %{buildroot}/usr/lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup-dev.service
rm -f %{buildroot}/usr/lib/systemd/system/sockets.target.wants/systemd-journald-audit.socket

# Do not ship broken symlinks
rm -f %{buildroot}/etc/xdg/systemd/user
rm -f %{buildroot}/usr/lib/environment.d/99-environment.conf

# Move config file into system PAM location
mv %{buildroot}/etc/pam.d %{buildroot}/usr/share/.

# Move pc files to default pkgconfig dir
mv %{buildroot}/usr/share/pkgconfig/* %{buildroot}/usr/lib64/pkgconfig/
rmdir %{buildroot}/usr/share/pkgconfig/

# exclude hwdb for pci device id vendors - we don't want this in containers
# or VMs. An update trigger will remake the full hwdb for non-vm cases.
mkdir -p %{buildroot}/usr/lib/udev/hwdb.d/20
mv %{buildroot}/usr/lib/udev/hwdb.d/20-* %{buildroot}/usr/lib/udev/hwdb.d/20

# Pre-generate and pre-ship hwdb, to speed up first boot
builddir/udevadm hwdb --root %{buildroot} --update --usr

# restore 20-* hwdb files
mv %{buildroot}/usr/lib/udev/hwdb.d/20/* %{buildroot}/usr/lib/udev/hwdb.d/
rmdir %{buildroot}/usr/lib/udev/hwdb.d/20

# Compute catalog
builddir/journalctl --root %{buildroot} --update-catalog

# Add a hook to integrate telemetrics crashprobe with systemd-coredump
cp src/coredump/coredump-wrapper %{buildroot}/usr/lib/systemd/

# only supported plugin is "clear.install"
rm -rvf %{buildroot}/usr/lib/kernel

# Remove unused systemd plka
rm -rvf %{buildroot}/var/lib/polkit-1

# Services that are OK to restart after software update
mkdir -p %{buildroot}/usr/share/clr-service-restart
ln -sf /usr/lib/systemd/system/systemd-timesyncd.service %{buildroot}/usr/share/clr-service-restart/systemd-timesyncd.service
ln -sf /usr/lib/systemd/system/systemd-resolved.service %{buildroot}/usr/share/clr-service-restart/systemd-resolved.service
ln -sf /usr/lib/systemd/system/systemd-udevd.service %{buildroot}/usr/share/clr-service-restart/systemd-udevd.service
ln -sf /usr/lib/systemd/system/systemd-journald.service %{buildroot}/usr/share/clr-service-restart/systemd-journald.service

# fix systemd-timesyncd v242 - dir expected, was symlink before in /var/state/timesync
mkdir -p %{buildroot}/usr/lib/systemd/system/update-triggers.target.wants
ln -s ../systemd-timesyncd-fix-localstatedir.service %{buildroot}/usr/lib/systemd/system/update-triggers.target.wants/systemd-timesyncd-fix-localstatedir.service

# remove catalog
rm -rvf %{buildroot}/var/lib/systemd
## install_append end

%files
%defattr(-,root,root,-)
